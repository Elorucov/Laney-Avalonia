name: Publish

on:
  push:
    branches: [ "beta", "production" ]
  workflow_dispatch:

jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            define: LINUX
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            define: WIN
            os: windows-latest
            target: win-x64
          - kind: macOS
            define: MAC
            os: macos-latest
            target: osx-x64
          - kind: macOS-arm64
            define: MAC
            os: macos-latest
            target: osx-arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 9.0.101
      - name: Setting repository name and owner to binary and channel variable to DEV by default
        shell: bash
        run: |
          echo "channel=DEV" >> "$GITHUB_ENV"
          echo "reponame=${{ github.repository }}" >> "$GITHUB_ENV"
          echo "repoowner=${{ github.repository_owner }}" >> "$GITHUB_ENV"
      - name: Setting channel variable to RELEASE, if needed
        shell: bash
        if: ${{ github.ref == 'refs/heads/production' }}
        run: echo "channel=RELEASE" >> "$GITHUB_ENV" 
      - name: Setting channel variable to BETA, if needed
        if: ${{ github.ref == 'refs/heads/beta' }}
        shell: bash
        run: echo "channel=BETA" >> "$GITHUB_ENV"
      - name: Preparation
        id: prep
        shell: pwsh
        run: |
          $location = Get-Location;
          $file = "$($location)/L2/L2.csproj";
          [xml]$proj = Get-Content -Path $($file);
          $version = $proj.Project.FirstChild.AssemblyVersion;
          $channel = "${{ env.channel }}";

          echo "INSTALLER_BACKGROUND=$($location)/L2/Assets/macos_installer_background.png" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          echo "INSTALLER_ICON=$($location)/L2/Assets/Logo/icon.icns" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

          echo "Channel: $($channel)";
          echo "Current version: $($version)";
          echo "VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      - name: Install Xcode command line tools
        if: ${{ matrix.define == 'MAC' }}
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest
      - name: Build
        shell: pwsh
        run: |
          $version = "${{ env.VERSION }}";
          $channel = "${{ env.channel }}";
          $target = "${{ matrix.target }}";
          $location = Get-Location;
          $output = '{0}/pub_${{ matrix.target }}' -f $location;
          echo "BINFOLDER=$output" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          & $location/L2/build_ci.ps1 -appname Laney -channel ${{ env.channel }} -ctarget ${{ matrix.target }} -repoowner ${{ env.repoowner }} -reponame ${{ env.reponame }} -output $output;
      - name: Clean-up output folder and make zip
        if: ${{ matrix.define != 'MAC' }}
        shell: bash
        run: |
          filename=Laney_${{ matrix.target }}_${{ env.VERSION }}_${{ env.channel }};
          if [ "${{ matrix.define }}" == "WIN" ]; then
            for f in $(find ${{ env.BINFOLDER }}/ -name '*.pdb'); do rm $f; done
            7z a -tzip "${filename}.zip" "${{ env.BINFOLDER }}/*"
            echo "${filename}.zip" >> $env:BINARCHIVE
          else
            for f in $(find ${{ env.BINFOLDER }}/ -name '*.dbg'); do rm $f; done
            tar -czvf ${filename}.tgz -C "${{ env.BINFOLDER }}" $(ls ${{ env.BINFOLDER }})
            echo "${filename}.tgz" >> $env:BINARCHIVE
          fi
      - name: Make DMG
        if: ${{ matrix.define == 'MAC' }}
        shell: bash
        run: |
          brew install create-dmg;
          create-dmg --volname "Laney Installer" --background "${{ env.INSTALLER_BACKGROUND }}" --window-pos 400 300 --window-size 640 450 --icon-size 128 --icon "Laney.app" 64 60 --app-drop-link 448 60 "Laney_"${{ matrix.target }}_${{ env.VERSION }}_${{ env.channel }}".dmg" "${{ env.BINFOLDER }}/MacOS_Bundles/Laney.app"
          echo ${{ env.BINFOLDER }}/MacOS_Bundles/Laney_${{ matrix.target }}.app >> $env:BINARCHIVE
      - name: Release to Github
        uses: softprops/action-gh-release@v1
        with:
          files: "Laney_*"
          tag_name: "v${{ env.VERSION }}-${{ env.channel }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}