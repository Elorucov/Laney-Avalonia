<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:vkui="clr-namespace:VKUI.Controls;assembly=VKUI"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="using:ELOR.Laney.Controls"
             xmlns:dm="using:ELOR.Laney.DataModels"
             xmlns:vm="using:ELOR.Laney.ViewModels"
             xmlns:vmc="using:ELOR.Laney.ViewModels.Controls"
             xmlns:vko="using:ELOR.VKAPILib.Objects"
             xmlns:i18n="using:ELOR.Laney.Assets.i18n"
             mc:Ignorable="d" d:DesignWidth="420" d:DesignHeight="480"
             SizeChanged="ChatView_SizeChanged"
             x:Class="ELOR.Laney.Views.ChatView"
             x:DataType="vm:ChatViewModel" x:CompileBindings="True">
  <UserControl.Styles>
    <Style Selector="Button.OnChat">
      <Setter Property="Margin" Value="12"/>
      <Setter Property="Padding" Value="0"/>
      <Setter Property="Width" Value="40"/>
      <Setter Property="Height" Value="40"/>
      <Setter Property="CornerRadius" Value="20"/>
      <Setter Property="Background" Value="{DynamicResource VKModalCardBackgroundBrush}"/>
    </Style>
    <Style Selector="Button.OnChat vkui|VKIcon">
      <Setter Property="Foreground" Value="{DynamicResource VKIconOutlineSecondaryBrush}"/>
    </Style>
    
    <!-- Composer buttons -->
    <Style Selector="Button.ComposerButton">
      <Setter Property="Foreground" Value="{DynamicResource VKIconOutlineMediumBrush}"/>
      <Setter Property="Height" Value="36"/>
      <Setter Property="Width" Value="36"/>
      <Setter Property="Padding" Value="0"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    
    <Style Selector="Button.MessagesCommands">
      <Setter Property="Padding" Value="0"/>
      <Setter Property="Margin" Value="3,0"/>
      <Setter Property="MinWidth" Value="32"/>
    </Style>
    
    <Style Selector="Button.MessagesCommands vkui|VKIcon.ButtonIn">
      <Setter Property="Foreground" Value="{DynamicResource VKHeaderTintBrush}"/>
      <Setter Property="Margin" Value="4,0"/>
    </Style>
    <Style Selector="Button.MessagesCommands TextBlock.ButtonIn">
      <Setter Property="Foreground" Value="{DynamicResource VKTextPrimaryBrush}"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="Margin" Value="0,1,6,0"/>
    </Style>
    <Style Selector="Grid.CompactMsgCmd Button.MessagesCommands TextBlock.ButtonIn">
      <Setter Property="IsVisible" Value="False"/>
    </Style>

    <Style Selector="Button.ComposerButton, Button.ComposerButton > vkui|VKIcon">
      <Setter Property="Foreground" Value="{DynamicResource VKIconOutlineMediumBrush}"/>
      <Setter Property="Opacity" Value="0.72"/>
    </Style>
  
    <Style Selector="Button.ComposerButton:pointerover, Button.ComposerButton:pointerover > vkui|VKIcon">
      <Setter Property="Opacity" Value="1"/>
    </Style>

    <Style Selector="Border.DropTarget">
      <Setter Property="CornerRadius" Value="8"/>
      <Setter Property="BorderThickness" Value="3"/>
      <Setter Property="BorderBrush" Value="{DynamicResource VKIconSecondaryAlphaBrush}"/>
      <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style Selector="Border.DropTargetHover">
      <Setter Property="BorderBrush" Value="{DynamicResource VKAccentBrush}"/>
    </Style>

    <Style Selector="Border.DropTarget vkui|VKIcon">
      <Setter Property="Foreground" Value="{DynamicResource VKIconSecondaryAlphaBrush}"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style Selector="Border.DropTargetHover vkui|VKIcon">
      <Setter Property="Foreground" Value="{DynamicResource VKAccentBrush}"/>
    </Style>

    <Style Selector="Border.DropTarget TextBlock.Title2">
      <Setter Property="Foreground" Value="{DynamicResource VKTextPrimaryBrush}"/>
      <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style Selector="Border.DropTargetHover TextBlock.Title2">
      <Setter Property="Foreground" Value="{DynamicResource VKAccentBrush}"/>
    </Style>

    <Style Selector="Border.DropTarget TextBlock.Subhead">
      <Setter Property="Foreground" Value="{DynamicResource VKIconSecondaryAlphaBrush}"/>
      <Setter Property="Margin" Value="0,8,0,0"/>
      <Setter Property="FontSize" Value="14"/>
      <Setter Property="LineHeight" Value="18"/>
      <Setter Property="TextAlignment" Value="Center"/>
    </Style>
  </UserControl.Styles>
  
  <Grid x:Name="Root" RowDefinitions="Auto Auto * Auto" DragDrop.AllowDrop="True" Background="{DynamicResource VKBackgroundPageBrush}">
    <vkui:PanelHeader VerticalAlignment="Top" IsSeparatorVisible="False" Background="{DynamicResource VKBackgroundContentBrush}" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource VKSeparatorAlphaBrush}">
      <vkui:PanelHeader.LeftButtons>
        <Button x:Name="BackButton">
          <vkui:VKIcon Id="{x:Static vkui:VKIconNames.Icon28ArrowLeftOutline}"/>
        </Button>
      </vkui:PanelHeader.LeftButtons>
      <vkui:PanelHeader.Content>
        <Button Classes="Tertiary" Padding="0" Height="52" VerticalContentAlignment="Stretch" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Command="{Binding OpenProfileCommand}">
          <Grid ColumnDefinitions="Auto *" Margin="2,0,0,0">
            <vkui:Avatar x:Name="ConvAvatar" Width="36" Height="36" Margin="0,0,8,0" VerticalAlignment="Center" Initials="{Binding Initials}" Background="{Binding PeerId, Converter={StaticResource agc}}" Foreground="White" controls:ImageLoader.Image="{Binding Avatar, Mode=OneWay}"/>
            <StackPanel Grid.Column="1" VerticalAlignment="Center">
              <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBlock Classes="Headline" FontWeight="Medium" Foreground="{DynamicResource VKTextPrimaryBrush}" Text="{Binding Title, Mode=OneWay}" MaxLines="1" TextTrimming="CharacterEllipsis"/>
                <vkui:VKIcon Id="{x:Static vkui:VKIconNames.Icon16Verified}" Foreground="{DynamicResource VKAccentBrush}" Margin="6,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" IsVisible="{Binding IsVerified}"/>
                <vkui:VKIcon Id="{x:Static vkui:VKIconNames.Icon16Muted}" Foreground="{DynamicResource VKIconTertiaryBrush}" Margin="6,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" IsVisible="{Binding PushSettings.DisabledForever}"/>
              </StackPanel>
              <TextBlock Classes="Caption1" Foreground="{DynamicResource VKTextSecondaryBrush}" Text="{Binding Subtitle, Mode=OneWay}">
				  <TextBlock.IsVisible>
					  <MultiBinding Converter="{x:Static BoolConverters.And}">
						  <MultiBinding.Bindings>
							  <Binding Path="ActivityStatus" Converter="{x:Static StringConverters.IsNullOrEmpty}"/>
							  <Binding Path="Subtitle" Converter="{x:Static StringConverters.IsNotNullOrEmpty}"/>
						  </MultiBinding.Bindings>
					  </MultiBinding>
				  </TextBlock.IsVisible>
			  </TextBlock>
              <TextBlock Classes="Caption1" Foreground="{DynamicResource VKAccentBrush}" IsVisible="{Binding ActivityStatus, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" Text="{Binding ActivityStatus, Mode=OneWay}"/>
            </StackPanel>
          </Grid>
        </Button>
      </vkui:PanelHeader.Content>
      <vkui:PanelHeader.RightButtons>
        <Button x:Name="SearchInChatButton" Click="SearchButton_Click">
          <vkui:VKIcon Id="{x:Static vkui:VKIconNames.Icon28SearchOutline}"/>
        </Button>
        <!--<Button x:Name="ContextMenuInChatButton">
          <vkui:VKIcon Id="{x:Static vkui:VKIconNames.Icon28MoreHorizontal}"/>
        </Button>-->
      </vkui:PanelHeader.RightButtons>
    </vkui:PanelHeader>
    
    <Border x:Name="PinnedMessageContainer" Grid.Row="1" Background="{DynamicResource VKBackgroundContentBrush}" IsVisible="{Binding PinnedMessage, Converter={x:Static ObjectConverters.IsNotNull}}" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource VKSeparatorAlphaBrush}">
      <Grid ColumnDefinitions="Auto *">
        <vkui:VKIcon Id="{x:Static vkui:VKIconNames.Icon20PinOutline}" Margin="12,0,0,0" Foreground="{DynamicResource VKIconSecondaryBrush}"/>
        <Button x:Name="PinnedMessageButton" Grid.Column="1" Padding="0" Classes="Tertiary" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Click="PinnedMessageButton_Click">
          <controls:CompactMessage Margin="12,8" Message="{Binding PinnedMessage}" IsSentTimeVisible="True"/>
        </Button>
      </Grid>
    </Border>

    <ListBox x:Name="MessagesList" Classes="MessagesList" Grid.Row="2" VerticalAlignment="Bottom" SelectionMode="Multiple,Toggle" Selection="{Binding SelectedMessages, Mode=TwoWay}" ItemsSource="{Binding DisplayedMessages, Mode=OneWay}">
      <ListBox.Styles>
        <Style Selector="ListBoxItem:nth-last-child(1)">
          <Setter Property="Margin" Value="0,0,0,4"/>
        </Style>
      </ListBox.Styles>
      <ListBox.ItemsPanel>
        <ItemsPanelTemplate>
          <StackPanel/>
        </ItemsPanelTemplate>
      </ListBox.ItemsPanel>
      <ListBox.ItemTemplate>
        <DataTemplate x:DataType="vmc:MessageViewModel">
          <controls:ChatViewItem Initialized="CVI_Initialized" Loaded="CVI_Loaded" Message="{Binding}" ContextRequested="ChatViewItem_ContextRequested"/>
        </DataTemplate>
      </ListBox.ItemTemplate>
    </ListBox>
    
    <Grid Grid.Row="2" x:Name="EmptyListContainer" IsVisible="{Binding !DisplayedMessages.Count}">
      <vkui:Spinner x:Name="LoadingSpinner" HorizontalAlignment="Center" Width="32" Height="32" IsVisible="{Binding IsLoading, Mode=OneWay}"/>
      <vkui:Placeholder VerticalAlignment="Center"
                            IsVisible="{Binding Placeholder, Mode=OneWay, FallbackValue=False, Converter={x:Static ObjectConverters.IsNotNull}}"
                            Icon="{Binding Placeholder.Icon, Mode=OneWay}"
                            Header="{Binding Placeholder.Header, Mode=OneWay}"
                            Text="{Binding Placeholder.Text, Mode=OneWay}">
        <vkui:Placeholder.Action>
          <Button Classes="Primary" Content="{Binding Placeholder.ActionButton, Mode=OneWay}" Command="{Binding Placeholder.ActionButtonFunc, Mode=OneWay}"/>
        </vkui:Placeholder.Action>
      </vkui:Placeholder>
    </Grid>
    
    <Border x:Name="TopDateContainer" IsVisible="False" IsHitTestVisible="False" Background="{DynamicResource VKModalCardBackgroundBrush}" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="8" Padding="12,4" CornerRadius="8" BoxShadow="0 4 8 #0A000000, 0 0 4 #0F000000">
      <TextBlock x:Name="TopDate" Classes="Subhead" Foreground="{DynamicResource VKTextSubheadBrush}"/>
    </Border>

    <StackPanel x:Name="OnChatButtons" Grid.Row="2" Margin="12" HorizontalAlignment="Right" VerticalAlignment="Bottom">
      <Grid x:Name="ReactionNavContainer" IsVisible="{Binding UnreadReactions, Converter={x:Static ObjectConverters.IsNotNull}}">
        <Border Width="40" Height="40" CornerRadius="20" Margin="12" BoxShadow="0 0 2 #15000000, 0 8 24 #15000000"/>
        <Button Classes="OnChat" Command="{Binding GoToLastReactedMessageCommand}">
          <vkui:VKIcon Id="{x:Static vkui:VKIconNames.Icon20Stars}" Margin="0,4,0,0"/>
        </Button>
        <Border x:Name="UnreadReactionsCounterBadge" Classes="Unmuted" MinWidth="18" Height="18" CornerRadius="9" Margin="9" IsHitTestVisible="False" HorizontalAlignment="Right" VerticalAlignment="Top">
          <TextBlock FontSize="12" LineHeight="12" Margin="4,2,4,0" TextAlignment="Center" Text="{Binding UnreadReactions.Count}"/>
        </Border>
      </Grid>
      
      <Grid x:Name="HopNavContainer">
        <Border Width="40" Height="40" CornerRadius="20" Margin="12" BoxShadow="0 0 2 #15000000, 0 8 24 #15000000"/>
        <Button Classes="OnChat" Command="{Binding GoToLastMessageCommand}">
          <vkui:VKIcon Id="{x:Static vkui:VKIconNames.Icon20Dropdown}" Margin="0,4,0,0"/>
        </Button>
        <Border x:Name="UnreadMessagesCounterBadge" Classes.Unmuted="{Binding !PushSettings.DisabledForever}" Classes.Muted="{Binding PushSettings.DisabledForever}" IsVisible="{Binding !!UnreadMessagesCount}" MinWidth="18" Height="18" CornerRadius="9" Margin="9" IsHitTestVisible="False" HorizontalAlignment="Right" VerticalAlignment="Top">
          <TextBlock FontSize="12" LineHeight="12" Margin="4,2,4,0" TextAlignment="Center" Text="{Binding UnreadMessagesCount}"/>
        </Border>
      </Grid>
    </StackPanel>

    <Border x:Name="SuggestedStickersContainer" Grid.Row="2" IsVisible="{Binding !!Composer.SuggestedStickers, Mode=OneWay}" Height="72" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="12" CornerRadius="12" Background="{DynamicResource VKBackgroundContentBrush}" BoxShadow="{StaticResource VKElevation3}">
      <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
        <ItemsRepeater x:Name="SuggestedStickersList" Margin="4" ItemsSource="{Binding Composer.SuggestedStickers, Mode=OneWay}">
          <ItemsRepeater.Layout>
            <StackLayout Orientation="Horizontal" Spacing="4"/>
          </ItemsRepeater.Layout>
          <ItemsRepeater.ItemTemplate>
            <DataTemplate x:DataType="vko:Sticker">
              <Button Classes="Tertiary" Padding="0" Width="64" Height="64" Click="OnSuggestedStickerClicked">
                <Image Width="64" Height="64" controls:ImageLoader.Source="{Binding Converter={StaticResource vpsc}, ConverterParameter=64}"/>
              </Button>
            </DataTemplate>
          </ItemsRepeater.ItemTemplate>
        </ItemsRepeater>
      </ScrollViewer>
    </Border>

    <Border x:Name="BottomPanel" Grid.Row="3" Margin="12,0,12,12" CornerRadius="12" MaxWidth="984" Background="{DynamicResource VKBackgroundContentBrush}" BoxShadow="0 0 2 #14000000, 0 4 6 #14000000">
      <Grid>
        <Grid x:Name="GenericChatComposerRoot" IsVisible="{Binding !ChatSettings.IsGroupChannel}">
          <Grid x:Name="ComposerContainer" IsVisible="{Binding !SelectedMessagesCount}">
            <DockPanel x:Name="RestrictionInfoContainer" IsVisible="{Binding RestrictionReason, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" MinHeight="44" HorizontalAlignment="Center">
              <vkui:VKIcon Margin="8,8,0,8" Foreground="{DynamicResource VKDestructiveBrush}" Id="{x:Static vkui:VKIconNames.Icon28ErrorOutline}"/>
              <TextBlock x:Name="RestrictionReason" Margin="8" Classes="Caption1" VerticalAlignment="Center" TextWrapping="Wrap" MaxLines="3" Foreground="{DynamicResource VKTextSubheadBrush}" Text="{Binding RestrictionReason}"/>
            </DockPanel>

            <Grid IsVisible="{Binding RestrictionReason, Converter={x:Static StringConverters.IsNullOrEmpty}}">
              <controls:Composer DataContext="{Binding Composer}"/>
            </Grid>
          </Grid>
        </Grid>

        <Grid x:Name="ChannelComposerRoot" MinHeight="44" IsVisible="{Binding ChatSettings.IsGroupChannel}">
          
        </Grid>
        
        <Grid x:Name="MessagesCommandsRoot" IsVisible="{Binding !!SelectedMessagesCount}" VerticalAlignment="Bottom" MinHeight="44" ColumnDefinitions="* Auto">
          <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="3,0,0,0">
            <Button Classes="Tertiary Medium MessagesCommands" Command="{Binding ClearSelectedMessages}">
              <vkui:VKIcon Classes="ButtonIn" Id="{x:Static vkui:VKIconNames.Icon24CancelOutline}"/>
            </Button>
            <TextBlock Classes="Subhead" VerticalAlignment="Center" Margin="0,1,0,0" Text="{Binding SelectedMessagesCount, Converter={StaticResource cc}, ConverterParameter=message}"/>
          </StackPanel>
          <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,3,0">
            <ItemsControl ItemsSource="{Binding MessagesCommands}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Button Classes="Tertiary Medium MessagesCommands" ToolTip.Tip="{Binding Label}" Command="{Binding Action}">
                    <StackPanel Orientation="Horizontal">
                      <vkui:VKIcon Classes="ButtonIn" Id="{Binding IconId}"/>
                      <TextBlock Classes="ButtonIn" Text="{Binding Label}"/>
                    </StackPanel>
                  </Button>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Button x:Name="MultiMsgContextButton" Classes="Tertiary Medium MessagesCommands" Command="{Binding ShowContextMenuForSelectedMessages}">
              <vkui:VKIcon Classes="ButtonIn" Id="{x:Static vkui:VKIconNames.Icon24MoreHorizontal}"/>
            </Button>
          </StackPanel>
        </Grid>
      </Grid>
    </Border>

    <Border x:Name="DebugOverlay" Classes="Debug" Grid.Row="1" Grid.RowSpan="2" IsVisible="False" Margin="0,64,0,0" Padding="8,4" Width="128" 
            IsHitTestVisible="False" HorizontalAlignment="Right" VerticalAlignment="Top" Background="#7f000000" TextElement.Foreground="White">
      <StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Scroll:</TextBlock>
          <TextBlock x:Name="dbgScrV" Margin="6,0,0,0"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Offset:</TextBlock>
          <TextBlock x:Name="dbgScrO" Margin="6,0,0,0"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Autoscroll:</TextBlock>
          <TextBlock x:Name="dbgScrAuto" Margin="6,0,0,0"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>MI sel:</TextBlock>
          <TextBlock Margin="6,0,0,0">
            <Run Text="{Binding Composer.TextSelectionStart}"/><Run>/</Run><Run Text="{Binding Composer.TextSelectionEnd}"/>
          </TextBlock>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>FVM:</TextBlock>
          <TextBlock x:Name="tmsgId" Margin="6,0,0,0"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>LVM:</TextBlock>
          <TextBlock x:Name="bmsgId" Margin="6,0,0,0"/>
        </StackPanel>
      </StackPanel>
    </Border>

    <Grid x:Name="DropArea" Grid.RowSpan="3" Grid.Row="1" IsVisible="False">
      <Rectangle Fill="{DynamicResource VKBackgroundPageBrush}" Grid.RowSpan="2" Opacity="0.85"/>
      <Grid x:Name="DropAreaRoot" Grid.RowDefinitions="* *" Background="Transparent" Margin="6">
        <Border x:Name="TopDropArea" Classes="DropTarget" Margin="6" DragDrop.AllowDrop="True">
          <StackPanel VerticalAlignment="Center">
            <vkui:VKIcon x:Name="TopDropIcon" Id="{x:Static vkui:VKIconNames.Icon56DocumentOutline}"/>
            <TextBlock Classes="Title2" FontWeight="Medium" Text="{x:Static i18n:Resources.drop_without_compression}"/>
            <TextBlock x:Name="TopDropText" Classes="Subhead"/>
          </StackPanel>
        </Border>
        <Border x:Name="BottomDropArea" Classes="DropTarget" Grid.Row="1" Margin="6" DragDrop.AllowDrop="True">
          <StackPanel VerticalAlignment="Center">
            <vkui:VKIcon x:Name="BottomDropIcon"/>
            <TextBlock Classes="Title2" FontWeight="Medium" Text="{x:Static i18n:Resources.drop_quick}"/>
            <TextBlock x:Name="BottomDropText" Classes="Subhead"/>
          </StackPanel>
        </Border>
      </Grid>
    </Grid>
  </Grid>
</UserControl>