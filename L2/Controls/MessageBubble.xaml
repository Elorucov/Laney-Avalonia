<ResourceDictionary xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vkui="using:VKUI.Controls"
        xmlns:obj="using:ELOR.VKAPILib.Objects"
        xmlns:i18n="using:ELOR.Laney.Assets.i18n"
        xmlns:controls="using:ELOR.Laney.Controls"
        xmlns:atch="using:ELOR.Laney.Controls.Attachments"
        xmlns:ctb="using:ColorTextBlock.Avalonia">

  <ControlTheme x:Key="{x:Type controls:MessageBubble}" TargetType="controls:MessageBubble">
    <!-- Set Defaults -->
    <Setter Property="Template">
      <ControlTemplate>
        <Grid x:Name="MessageUIRoot" ColumnDefinitions="Auto *" Margin="12,4" MaxWidth="984">
          <Grid.Styles>
            <Style Selector="Border.IncomingMessageBackground">
              <Setter Property="Background" Value="{DynamicResource MessageBubbleDefaultIncomingBrush}"/>
            </Style>

            <Style Selector="Border.OutgoingMessageBackground">
              <Setter Property="Background" Value="{DynamicResource MessageBubbleDefaultOutgoingBrush}"/>
            </Style>

            <Style Selector="Border.GiftMessageBackground">
              <Setter Property="Background" Value="{DynamicResource VKImBubbleGiftBackgroundBrush}"/>
            </Style>

            <Style Selector="Border.BorderMessageBackground">
              <Setter Property="Background" Value="{DynamicResource VKBackgroundContentBrush}"/>
              <Setter Property="BorderBrush" Value="{DynamicResource VKImageBorderBrush}"/>
              <Setter Property="BorderThickness" Value="1"/>
            </Style>

            <!-- Colors for controls in bubble -->
            <Style Selector="atch|AttachmentsContainer.Incoming atch|BasicAttachment /template/ vkui|VKIcon#BAIcon">
              <Setter Property="Foreground" Value="{DynamicResource MessageBubbleDefaultIncomingBrush}"/>
            </Style>
            <Style Selector="atch|AttachmentsContainer.Outgoing atch|BasicAttachment /template/ vkui|VKIcon#BAIcon">
              <Setter Property="Foreground" Value="{DynamicResource MessageBubbleDefaultOutgoingBrush}"/>
            </Style>
            <Style Selector="atch|AttachmentsContainer.Outgoing atch|BasicAttachment /template/ TextBlock#BASub">
              <Setter Property="Foreground" Value="{DynamicResource MessageBubbleOutgoingTextSecondaryBrush}"/>
            </Style>
            <Style Selector="atch|AttachmentsContainer.Outgoing atch|ExtendedAttachment /template/ TextBlock#EASub">
              <Setter Property="Foreground" Value="{DynamicResource MessageBubbleOutgoingTextSecondaryBrush}"/>
            </Style>

            <Style Selector="Button.ReactionChip TextBlock">
              <Setter Property="Foreground" Value="{DynamicResource VKTextPrimaryBrush}"/>
            </Style>
            <Style Selector="Border#ReactionsContainer.Outgoing Button.ReactionChip">
              <Setter Property="Background" Value="{DynamicResource VKImBubbleOutgoingHighlightedBrush}"/>
            </Style>
            <Style Selector="Border#ReactionsContainer.Incoming Button.ReactionChip">
              <Setter Property="Background" Value="{DynamicResource VKImBubbleIncomingHighlightedBrush}"/>
            </Style>
            
            <Style Selector="Button.ReactionChip.Selected TextBlock">
              <Setter Property="Foreground" Value="#FFF"/>
            </Style>
            <Style Selector="Button.ReactionChip.Selected">
              <Setter Property="Background" Value="{DynamicResource VKAccentBrush}"/>
            </Style>
            
            <!-- Time & indicators -->
            <Style Selector="Border.DefaultIndicator">
              <Setter Property="Background" Value="Transparent"/>
              <Setter Property="Margin" Value="0,0,5,2"/>
            </Style>

            <Style Selector="Border.DefaultIndicator > StackPanel#IndicatorStack > TextBlock">
              <Setter Property="Foreground" Value="{DynamicResource VKTextSecondaryBrush}"/>
            </Style>

            <Style Selector="Border.DefaultIndicator > StackPanel#IndicatorStack > vkui|VKIcon">
              <Setter Property="Foreground" Value="{DynamicResource VKTextSecondaryBrush}"/>
            </Style>


            <Style Selector="Border.ImageIndicator">
              <Setter Property="Background" Value="#59000000"/>
              <Setter Property="Margin" Value="0,0,5,5"/>
            </Style>

            <Style Selector="Border.ComplexImageIndicator">
              <Setter Property="Background" Value="#59000000"/>
              <Setter Property="Margin" Value="0,0,9,9"/>
            </Style>

            <Style Selector="Border.ImageIndicator > StackPanel#IndicatorStack > TextBlock, Border.ComplexImageIndicator > StackPanel#IndicatorStack > TextBlock">
              <Setter Property="Foreground" Value="White"/>
            </Style>

            <Style Selector="Border.ImageIndicator > StackPanel#IndicatorStack > vkui|VKIcon, Border.ComplexImageIndicator > StackPanel#IndicatorStack > vkui|VKIcon">
              <Setter Property="Foreground" Value="White"/>
            </Style>
          </Grid.Styles>
        <Button x:Name="AvatarButton" Classes="Tertiary" Padding="0" VerticalAlignment="Bottom" Margin="0,0,8,2" Width="32" Height="32">
            <vkui:Avatar x:Name="SenderAvatar" Foreground="White" Width="32" Height="32"
                       Initials="{Binding Message.SenderName, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ic}}"
                       Background="{Binding Message.SenderId, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource agc}}"
                       controls:ImageLoader.Image="{Binding Message.SenderAvatar, RelativeSource={RelativeSource TemplatedParent}}"/>
          </Button>
          <Grid x:Name="BubbleRoot" RowDefinitions="* Auto Auto" Grid.Column="1" MinHeight="36" MinWidth="48" MaxWidth="576" HorizontalAlignment="Left" ToolTip.Tip="{Binding Message.UIType, RelativeSource={RelativeSource TemplatedParent}}">
            <Border x:Name="BubbleBackground" Grid.RowSpan="3" CornerRadius="18"/>
            <StackPanel x:Name="MessageContent">
              <Border x:Name="SenderNameWrap" Margin="12,7,12,0" IsVisible="{Binding Message.IsSenderNameVisible, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                <TextBlock x:Name="SenderName" Classes="Caption1" FontWeight="Medium" Foreground="{DynamicResource VKImTextNameBrush}" Text="{Binding Message.SenderName, RelativeSource={RelativeSource TemplatedParent}}"/>
              </Border>
              <Button x:Name="ReplyMessageButton" Classes="Tertiary" Margin="12,6,12,4" Padding="0" CornerRadius="0" IsVisible="{Binding Message.ReplyMessage, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static ObjectConverters.IsNotNull}}">
                <DockPanel>
                  <Rectangle Fill="{DynamicResource VKImTextNameBrush}" Width="2" RadiusX="1" RadiusY="1" Margin="0,0,6,0" VerticalAlignment="Stretch"/>
                  <controls:CompactMessage Message="{Binding Message.ReplyMessage, RelativeSource={RelativeSource TemplatedParent}}"/>
                </DockPanel>
              </Button>
              <atch:GiftUI x:Name="Gift" Margin="4,4,4,0"/>
              <ctb:CTextBlock x:Name="MessageText" Margin="12,0,12,8" FontSize="15" LineHeight="20" TextWrapping="Wrap" Foreground="{DynamicResource VKTextPrimaryBrush}" IsVisible="{Binding Message.Text, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"/>
              <atch:AttachmentsContainer x:Name="MessageAttachments" IsVisible="{Binding Message.Attachments.Count, RelativeSource={RelativeSource TemplatedParent}}"/>
              <Rectangle x:Name="Map" Margin="4,0,4,4" IsVisible="{Binding Message.Location, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static ObjectConverters.IsNotNull}}" RadiusX="14" RadiusY="14"/>
              <Border x:Name="ForwardedMessagesContainer" Margin="12,0,12,22" IsVisible="False" BorderBrush="{DynamicResource VKImForwardLineTintBrush}">
                <StackPanel x:Name="ForwardedMessagesStack" Spacing="12"/>
              </Border>
            </StackPanel>
            <Border x:Name="IndicatorContainer" Height="20" CornerRadius="10" HorizontalAlignment="Right" VerticalAlignment="Bottom" Classes="DefaultIndicator">
              <StackPanel x:Name="IndicatorStack" Orientation="Horizontal" Margin="6,3">
                <vkui:VKIcon x:Name="ImportantIndicator" Id="Icon12Favorite" Width="12" Height="12" Margin="0,0,4,0" IsVisible="{Binding Message.IsImportant, RelativeSource={RelativeSource TemplatedParent}}"/>
                <TextBlock x:Name="EditedIndicator" Classes="Caption3" Text="{x:Static i18n:Resources.edited_indicator}" Margin="0,0,4,0" IsVisible="{Binding Message.EditTime, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static ObjectConverters.IsNotNull}}"/>
                <TextBlock x:Name="TimeIndicator" Classes="Caption3"/>
                <vkui:VKIcon x:Name="StateIndicator" Id="Icon16CheckDoubleOutline" Width="12" Height="12" Margin="4,0,0,0"/>
              </StackPanel>
            </Border>
            <controls:BotKeyboardUI x:Name="BotKeyboard" Grid.Row="1" Margin="12,4,12,12" MinWidth="296" Keyboard="{Binding Message.Keyboard, RelativeSource={RelativeSource TemplatedParent}}" IsVisible="{Binding Message.Keyboard, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static ObjectConverters.IsNotNull}}"/>
            <Border x:Name="ReactionsContainer" Grid.Row="2" Margin="12,0,12,8" HorizontalAlignment="Left" Tag="{Binding Message.SelectedReactionId, RelativeSource={RelativeSource TemplatedParent}}" IsVisible="{Binding Message.Reactions.Count, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
              <ItemsControl x:Name="ReactionsList" HorizontalAlignment="Left" ItemsSource="{Binding Message.Reactions, RelativeSource={RelativeSource TemplatedParent}}">
                <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                    <WrapPanel HorizontalAlignment="Left" Margin="0,-2" Orientation="Horizontal"/>
                  </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                  <DataTemplate x:DataType="obj:MessageReaction">
                    <Button Classes="ReactionChip" CornerRadius="15" Margin="0,2,4,2" Padding="4,2,6,2" Height="30" Command="{Binding Tag, ElementName=ReactionsList}" CommandParameter="{Binding ReactionId}">
                      <Classes.Selected>
                        <MultiBinding Converter="{StaticResource src}">
                          <Binding Path="Tag" ElementName="ReactionsContainer"/>
                          <Binding Path="ReactionId"/>
                        </MultiBinding>
                      </Classes.Selected>
                      <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Width="26" Height="26" controls:ImageLoader.SvgSource="{Binding ReactionId, Converter={StaticResource rec}}"/>
                        <Grid MinWidth="16" Height="22">
                          <TextBlock FontSize="13" LineHeight="16" Margin="4,3,2,3" TextAlignment="Center" Text="{Binding Count}"/>
                        </Grid>
                      </StackPanel>
                    </Button>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
            </Border>
            <Ellipse x:Name="ReadIndicator" Grid.RowSpan="3" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,2,1" Width="8" Height="8" Fill="{DynamicResource VKAccentBrush}" Stroke="{DynamicResource VKBackgroundContentBrush}" StrokeThickness="1"/>
          </Grid>
        </Grid>
      </ControlTemplate>
    </Setter>
  </ControlTheme>
</ResourceDictionary>